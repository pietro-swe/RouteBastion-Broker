version: "2"

overrides:
  go:
    rename:
      customer: "ModelCustomer"
      limitation: "ModelLimitation"
      provider: "ModelProvider"
      api_key: "ModelApiKey"
      vehicle: "ModelVehicle"
      optimization_vehicle: "ModelOptimizationVehicle"
      provider_communication: "ModelProviderCommunication"
      provider_constraints_and_feature: "ModelProviderConstraintsAndFeatures"
      optimization: "ModelOptimization"
      optimization_waypoint: "ModelOptimizationWaypoint"
    overrides:
      - db_type: "uuid"
        go_type:
          import: "github.com/satori/go.uuid"
          type: "UUID"

sql:
  - engine: "postgresql"
    queries: "sql/queries.sql"
    schema: "sql/schema.sql"
    database:
      uri: "postgresql://docker:docker@localhost:5432/route_bastion"
    gen:
      go:
        sql_package: "pgx/v5"
        emit_empty_slices: true
        emit_pointers_for_null_types: true
        package: "generated"
        out: "internal/infra/db/generated"
    rules:
      - sqlc/db-prepare
      - no-delete
      - postgresql-query-too-costly
      - postgresql-no-seq-scan

rules:
  - name: no-delete
    message: "don't use delete statements"
    rule: |
      query.sql.contains("DELETE")
  - name: postgresql-query-too-costly
    message: "Query cost estimate is too high"
    rule: "postgresql.explain.plan.total_cost > 2.0"
  - name: postgresql-no-seq-scan
    message: "Query plan results in a sequential scan"
    rule: "postgresql.explain.plan.node_type == 'Seq Scan'"
